{
    "compilerOptions": {
      // Type Checking
      "strict": true,
      "noImplicitAny": true,
      "strictNullChecks": true,
      "strictFunctionTypes": true,
      "strictBindCallApply": true,
      "strictPropertyInitialization": false, // Set to false due to DI frameworks like Awilix used in Medusa
      "noImplicitThis": true,
      "alwaysStrict": true,
      "skipLibCheck": true, // Speeds up compilation by skipping type checking of declaration files
  
      // Modules
      "module": "commonjs", // Medusa backend uses CommonJS
      "esModuleInterop": true, // Enables smoother interoperation between CommonJS and ES modules
      "moduleResolution": "node", // Standard module resolution strategy for Node.js
      "resolveJsonModule": true, // Allows importing .json files as modules
  
      // Emit
      "declaration": true, // Generate .d.ts files for type safety in consuming projects
      "declarationMap": true, // Generate source maps for .d.ts files
      "sourceMap": true, // Generate .js.map source map files for debugging
      "outDir": "./dist", // Standard output directory for `tsc` builds (Medusa's scripts might override this)
      "removeComments": true, // Remove comments from JavaScript output
  
      // JavaScript Support (typically not needed for pure TS projects)
      // "allowJs": false,
      // "checkJs": false,
  
      // Language and Environment
      "target": "ES2020", // Target modern ECMAScript version (compatible with Node >=20)
      "lib": ["ES2020", "DOM"], // Include ES2020 features and DOM typings (for admin UI)
      "jsx": "react-jsx", // Enable JSX support for React components
      "experimentalDecorators": true, // Essential for Medusa entities and services (using MikroORM)
      "emitDecoratorMetadata": true, // Essential for Medusa entities and services (using MikroORM)
  
      // Project Options
      "rootDir": "./src", // Specifies the root directory of your source files
      "baseUrl": ".", // Base directory for resolving non-relative module names (used with paths)
      "paths": {
        "@/*": ["./src/*"] // Common alias: e.g., import MyComponent from '@/components/MyComponent'
      },
  
      // Completeness & Build Tools
      "forceConsistentCasingInFileNames": true, // Catches errors caused by inconsistent casing in file names
      "isolatedModules": true // Ensures each file can be transpiled independently, often good with tools like SWC/Babel
    },
    "include": [
      "src/**/*", // Include all TypeScript/JavaScript files within the 'src' directory
      ".medusa/types/**/*.d.ts" // Include type definitions generated by Medusa
    ],
    "exclude": [
      "node_modules", // Exclude external dependencies
      "dist", // Exclude the build output directory specified in outDir
      ".medusa/server", // Exclude Medusa's server build output (contains compiled JS)
      ".medusa/admin", // Exclude Medusa's admin build output
      ".cache", // Exclude cache directories
      "**/*.spec.ts", // Exclude test files (Jest/Vitest convention)
      "**/*.test.ts", // Exclude test files
      "jest.config.ts", // Exclude Jest config if it's a TS file
      "vite.config.ts" // Exclude Vite config if it's a TS file
    ],
    "ts-node": {
      // Configuration for ts-node, which Medusa CLI might use internally for development
      "compilerOptions": {
        "module": "commonjs" // ts-node often works best with CommonJS for Node environments
      },
      "transpileOnly": true, // Skips type checking for faster execution during development (types checked by tsc/IDE)
      "swc": true // Use SWC for transpilation if @swc/core is installed (it is in your devDependencies)
    }
  }