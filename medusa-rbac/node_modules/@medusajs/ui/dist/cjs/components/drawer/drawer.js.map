{"version":3,"file":"drawer.js","sourceRoot":"","sources":["../../../../src/components/drawer/drawer.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\n\nimport { XMark } from \"@medusajs/icons\"\nimport * as DrawerPrimitives from \"@radix-ui/react-dialog\"\nimport * as React from \"react\"\n\nimport { IconButton } from \"@/components/icon-button\"\nimport { Kbd } from \"@/components/kbd\"\nimport { Text } from \"@/components/text\"\nimport { clx } from \"@/utils/clx\"\n\ninterface DrawerRootProps extends React.ComponentPropsWithoutRef<typeof DrawerPrimitives.Root> {}\n\n/**\n * This component is based on the [Radix UI Dialog](https://www.radix-ui.com/primitives/docs/components/dialog) primitives.\n */\nconst DrawerRoot = (\n  props: DrawerRootProps\n) => {\n  return <DrawerPrimitives.Root {...props} />\n}\nDrawerRoot.displayName = \"Drawer\"\n\ninterface DrawerTriggerProps extends React.ComponentPropsWithoutRef<typeof DrawerPrimitives.Trigger> {}\n\n/**\n * This component is used to create the trigger button that opens the drawer.\n * It accepts props from the [Radix UI Dialog Trigger](https://www.radix-ui.com/primitives/docs/components/dialog#trigger) component.\n */\nconst DrawerTrigger = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitives.Trigger>,\n  DrawerTriggerProps\n>(({ className, ...props }: DrawerTriggerProps, ref) => {\n  return (\n    <DrawerPrimitives.Trigger ref={ref} className={clx(className)} {...props} />\n  )\n})\nDrawerTrigger.displayName = \"Drawer.Trigger\"\n\ninterface DrawerCloseProps extends React.ComponentPropsWithoutRef<typeof DrawerPrimitives.Close> {}\n\n/**\n * This component is used to create the close button for the drawer.\n * It accepts props from the [Radix UI Dialog Close](https://www.radix-ui.com/primitives/docs/components/dialog#close) component.\n */\nconst DrawerClose = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitives.Close>,\n  DrawerCloseProps\n>(({ className, ...props }: DrawerCloseProps, ref) => {\n  return (\n    <DrawerPrimitives.Close ref={ref} className={clx(className)} {...props} />\n  )\n})\nDrawerClose.displayName = \"Drawer.Close\"\n\ninterface DrawerPortalProps extends DrawerPrimitives.DialogPortalProps {}\n\n/**\n * The `Drawer.Content` component uses this component to wrap the drawer content.\n * It accepts props from the [Radix UI Dialog Portal](https://www.radix-ui.com/primitives/docs/components/dialog#portal) component.\n */\nconst DrawerPortal = (props: DrawerPortalProps) => {\n  return <DrawerPrimitives.DialogPortal {...props} />\n}\nDrawerPortal.displayName = \"Drawer.Portal\"\n\ninterface DrawerOverlayProps extends React.ComponentPropsWithoutRef<typeof DrawerPrimitives.Overlay> {}\n\n/**\n * This component is used to create the overlay for the drawer.\n * It accepts props from the [Radix UI Dialog Overlay](https://www.radix-ui.com/primitives/docs/components/dialog#overlay) component.\n */\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitives.Overlay>,\n  DrawerOverlayProps\n>(({ className, ...props }: DrawerOverlayProps, ref) => {\n  return (\n    <DrawerPrimitives.Overlay\n      ref={ref}\n      className={clx(\n        \"bg-ui-bg-overlay fixed inset-0\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nDrawerOverlay.displayName = \"Drawer.Overlay\"\n\ninterface DrawerContentProps extends React.ComponentPropsWithoutRef<typeof DrawerPrimitives.Content> {\n  /**\n   * Props for the overlay component.\n   * It accepts props from the [Radix UI Dialog Overlay](https://www.radix-ui.com/primitives/docs/components/dialog#overlay) component.\n  */\n  overlayProps?: React.ComponentPropsWithoutRef<typeof DrawerOverlay>\n  /**\n   * Props for the portal component that wraps the drawer content.\n   * It accepts props from the [Radix UI Dialog Portal](https://www.radix-ui.com/primitives/docs/components/dialog#portal) component.\n   */\n  portalProps?: React.ComponentPropsWithoutRef<typeof DrawerPortal>\n}\n\n/**\n * This component wraps the content of the drawer.\n * It accepts props from the [Radix UI Dialog Content](https://www.radix-ui.com/primitives/docs/components/dialog#content) component.\n */\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitives.Content>,\n  DrawerContentProps\n>(({ className, overlayProps, portalProps, ...props }: DrawerContentProps, ref) => {\n  return (\n    <DrawerPortal {...portalProps}>\n      <DrawerOverlay {...overlayProps} />\n      <DrawerPrimitives.Content\n        ref={ref}\n        className={clx(\n          \"bg-ui-bg-base shadow-elevation-modal border-ui-border-base fixed inset-y-2 flex w-full flex-1 flex-col rounded-lg border outline-none max-sm:inset-x-2 max-sm:w-[calc(100%-16px)] sm:right-2 sm:max-w-[560px]\",\n          \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:slide-out-to-right-1/2 data-[state=open]:slide-in-from-right-1/2 duration-200\",\n          className\n        )}\n        {...props}\n      />\n    </DrawerPortal>\n  )\n})\nDrawerContent.displayName = \"Drawer.Content\"\n\ninterface DrawerHeaderProps extends React.ComponentPropsWithoutRef<\"div\"> {}\n\n/**\n * This component is used to wrap the header content of the drawer.\n * This component is based on the `div` element and supports all of its props.\n */\nconst DrawerHeader = React.forwardRef<\n  HTMLDivElement,\n  DrawerHeaderProps\n>(({ children, className, ...props }: DrawerHeaderProps, ref) => {\n  return (\n    <div\n      ref={ref}\n      className=\"border-ui-border-base flex items-start justify-between gap-x-4 border-b px-6 py-4\"\n      {...props}\n    >\n      <div className={clx(\"flex flex-col gap-y-1\", className)}>{children}</div>\n      <div className=\"flex items-center gap-x-2\">\n        <Kbd>esc</Kbd>\n        <DrawerPrimitives.Close asChild>\n          <IconButton size=\"small\" type=\"button\" variant=\"transparent\">\n            <XMark />\n          </IconButton>\n        </DrawerPrimitives.Close>\n      </div>\n    </div>\n  )\n})\nDrawerHeader.displayName = \"Drawer.Header\"\n\ninterface DrawerBodyProps extends React.ComponentPropsWithoutRef<\"div\"> {}\n\n/**\n * This component is used to wrap the body content of the drawer.\n * This component is based on the `div` element and supports all of its props\n */\nconst DrawerBody = React.forwardRef<\n  HTMLDivElement,\n  DrawerBodyProps\n>(({ className, ...props }: DrawerBodyProps, ref) => {\n  return (\n    <div ref={ref} className={clx(\"flex-1 px-6 py-4\", className)} {...props} />\n  )\n})\nDrawerBody.displayName = \"Drawer.Body\"\n\ninterface DrawerFooterProps extends React.HTMLAttributes<HTMLDivElement> {}\n\n/**\n * This component is used to wrap the footer content of the drawer.\n * This component is based on the `div` element and supports all of its props.\n */\nconst DrawerFooter = ({\n  className,\n  ...props\n}: DrawerFooterProps) => {\n  return (\n    <div\n      className={clx(\n        \"border-ui-border-base flex items-center justify-end space-x-2 overflow-y-auto border-t px-6 py-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nDrawerFooter.displayName = \"Drawer.Footer\"\n\n/**\n * This component adds an accessible title to the drawer.\n * It accepts props from the [Radix UI Dialog Title](https://www.radix-ui.com/primitives/docs/components/dialog#title) component.\n */\nconst DrawerTitle = DrawerPrimitives.Title\nDrawerTitle.displayName = \"Drawer.Title\"\n\ninterface DrawerDescriptionProps extends React.ComponentPropsWithoutRef<typeof DrawerPrimitives.Description> {}\n\n/**\n * This component adds accessible description to the drawer.\n * It accepts props from the [Radix UI Dialog Description](https://www.radix-ui.com/primitives/docs/components/dialog#description) component.\n */\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitives.Description>,\n  DrawerDescriptionProps\n>(({ className, children, ...props }: DrawerDescriptionProps, ref) => (\n  <DrawerPrimitives.Description\n    ref={ref}\n    className={clx(className)}\n    asChild\n    {...props}\n  >\n    <Text>{children}</Text>\n  </DrawerPrimitives.Description>\n))\nDrawerDescription.displayName = \"Drawer.Description\"\n\nconst Drawer = Object.assign(DrawerRoot, {\n  Body: DrawerBody,\n  Close: DrawerClose,\n  Content: DrawerContent,\n  Description: DrawerDescription,\n  Footer: DrawerFooter,\n  Header: DrawerHeader,\n  Title: DrawerTitle,\n  Trigger: DrawerTrigger,\n})\n\nexport { Drawer }\n"]}